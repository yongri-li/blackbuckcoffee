{% form 'product', product, id: "add-to-cart-form", novalidate: 'novalidate', data-productid: product.id %}
  {% comment %}
    Automatically inserted by Shop Pay Installments theme updater
  {% endcomment %}
  {% unless settings.disable_autogenerated_payment_terms %}
    {{ form | payment_terms }}
  {% endunless %}

{% if product.available %}
<div id="product-variants">
    {% if variantCount > 0  and product.variants[0].title != 'Default Title'  %}
    <select id="product-selectors" name="id" data-productid="{{product.id}}" style="display: none;">
        {% for variant in product.variants %}
        {% if variant.available %}
        <option data-imge="{% if variant.image.size != blank %}{{ variant.image.src | product_img_url: 'compact' }}{% else  %}{{ product.featured_image.src | product_img_url: 'compact' }}{% endif %}" {% if variant == current_variant %} selected="selected" {% endif %} value="{{ variant.id }}" data-productid="{{product.id}}">
            {{ variant.title }}
        </option>
        {% else %}
        <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
        {% endif %}
        {% endfor %}
    </select>

    {% if settings.use_color_swatch %}
    {% for option in product.options %}
    {% include 'swatch' with option %}
    {% endfor %}
    {% endif %}

    {% else %}
    <input type="hidden" name="id" value="{{ product.variants[0].id }}" />
    {% endif %}
</div>
{% endif %}

{% if product.title == 'Black Buck Coffee - Ground' or product.title == 'Black Buck Coffee - Whole Bean' %}
<label for="quantity" {% if settings.enable_multilang %}data-translate="cart.label.quantity"{%endif%}>
    Select Coffee Type:
</label>
<ul class="coffee-types">
<li {% if product.title == 'Black Buck Coffee - Ground' %} class="current" {% endif %}>
  <a {% if product.title == 'Black Buck Coffee - Ground' %} href="#" {% else %} href="/collections/coffee/products/black-buck-coffee-ground" {% endif %}>
    <img src="{{ 'ground.png' | file_url }}">
  </a>
</li>
<li {% if product.title == 'Black Buck Coffee - Whole Bean' %} class="current" {% endif %}>
  <a {% if product.title == 'Black Buck Coffee - Whole Bean' %} href="#" {% else %} href="/collections/coffee/products/black-buck-coffee-whole-bean" {% endif %}>
    <img src="{{ 'whole-bean.png' | file_url }}">
  </a>
</li>
</ul>
{% endif %}

{% if product.available %}
{% include 'subscription-product' %}
{% endif %}

<div class="groups-btn">
    {% if current_variant.available %}
    <input data-grouped-addToCart type="submit" name="add" class="btn" data-form-id="#add-to-cart-form" {% if settings.enable_multilang %}data-translate="products.product.add_to_cart"{%endif%} id="product-add-to-cart" value="{{ 'products.product.add_to_cart' | t }}">
    {% else %}
    <input type="submit" name="add" class="btn" {% if settings.enable_multilang %}data-translate="products.product.unavailable"{%endif%} id="product-add-to-cart" disabled value="{{ 'products.product.unavailable' | t }}">
    {% endif %}
</div>
{% endform %}

<script>
  var buttonSlt = '[data-minus-qtt], [data-plus-qtt]',
      buttonElm = $(buttonSlt);

  $(document).on('click', buttonSlt, function(e) {
      e.preventDefault();
      e.stopPropagation();

      var self = $(this),
          input = $('.quantity input[name="quantity"]'),
          oldVal = parseInt(input.val()),
          newVal = 1;

      switch (true) {
          case (self.hasClass('plus')): {
              newVal = oldVal + 1;
              break;
          }
          case (self.hasClass('minus') && oldVal > 1): {
              newVal = oldVal - 1;
              break;
          }
      }

      input.val(newVal).trigger('change');

  });

    var selectCallback = function(variant, selector) {
        var addToCartBtn = $('#product-add-to-cart'),
            productPrice = $('.product .price'),
            comparePrice = $('.product .compare-price'),
            productInventory = $('.product-inventory'),
            productSku = $('.product .sku-product'),
            labelSave = $('.product-photos .sale-label');

        if(variant) {
        // addToCartbtn
            if (variant.available) {
                addToCartBtn.removeClass('disabled').removeAttr('disabled').val(window.inventory_text.add_to_cart);
            }
            else {
                addToCartBtn.val(window.inventory_text.sold_out).addClass('disabled').attr('disabled', 'disabled');
            };

            // Prices
          	$('.product #product_regular_price').val(variant.price);
            productPrice.html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}"));

            if(variant.compare_at_price > variant.price) {
                productPrice.addClass("on-sale");
                comparePrice
                    .html(Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}"))
                    .show();
               {% unless settings.type_label_sale == 'label_sale' %}
               labelSave.html('-' + Math.floor((variant.compare_at_price - variant.price) * 100 / variant.compare_at_price) + '%').show();
               {% endunless %}
            }
            else {
                comparePrice.hide();
                productPrice.removeClass("on-sale");
              	{% unless settings.type_label_sale == 'label_sale' %}
                labelSave.hide();
              	{% endunless %}
            };


            var form = $('#' + selector.domIdPrefix).closest('form');

            for (var i=0,length=variant.options.length; i<length; i++) {
                var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');

                if (radioButton.size()) {
                radioButton.get(0).checked = true;
                }
            };
        }
        else {
            addToCartBtn.val(window.inventory_text.sold_out).addClass('disabled').attr('disabled', 'disabled');
        };

        /*begin variant image*/
        $(document).ready(function(){
          if (variant && variant.featured_image) {
            var originalImage = $("img[id|='product-featured-image']");
            var newImage = variant.featured_image;
            var element = originalImage[0];

            Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
              jQuery('.slider-nav img').each(function() {
                var grandSize = $(this).attr('src').split('?')[0];

                newImageSizedSrc = newImageSizedSrc.split('?')[0];

                grandSize = grandSize.replace('compact','1024x1024');
                if (grandSize == newImageSizedSrc) {
                  $(this).closest('.item').trigger('click');
                  return false;
                }
              });
            });
          };
        });
    };

    $(function($) {
        if($('#product-selectors').length > 0){
          new Shopify.OptionSelectors('product-selectors', {
              product: {{ product | json }},
              onVariantSelected: selectCallback,
              enableHistoryState: true
          });

        }

        Shopify.linkOptionSelectors({{ product | json }}, '.product');

        {% if product.options.size == 1 and product.options.first != 'Title' %}
        $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
        {% elsif product.options.size > 1 %}
        $('.selector-wrapper').append('<span class="icon-dropdown"><i class="fa fa-angle-down"></i></span>');
        {% endif %}

        $('.product-shop .selector-wrapper label').append('<em>*</em>');

        {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
        $('.selector-wrapper').hide();
        {% endif %}


    });
</script>
